[tox]
envlist = py3{6,7,8,9,10}-{linux,macos}
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos

[base]
deps =
    pip>=21.1
    versioningit

[build]
deps =
    pip>=21.1
    wheel
    build
    twine

[testenv]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

passenv =
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    -e .[test,cov]

commands =
    python -m pytest --capture=fd -v test_daemon.py --cov=daemon --cov-report term-missing

[testenv:docs]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands = make -C docs html

[testenv:docs-lint]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands = make -C docs linkcheck

[testenv:deploy]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv = CI

deps =
    pip>=21.1

commands =
    pip install daemonizer --force-reinstall --pre --prefer-binary -f dist/
    python -c "import daemon; print(daemon.__version__)"

[testenv:lint]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    gevent
    eventlet
    pylint

commands =
    pylint --fail-under=8.35 --ignore=_version.py daemon/__init__.py

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    flake8
    flake8-bugbear

commands =
    flake8 daemon/

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    gevent
    eventlet
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive daemon/

[testenv:isort]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    isort

commands =
    python -m isort daemon/

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    #bash -c 'make -C docs/ clean'
    bash -c 'rm -rf build/ dist/ *.egg-info/ docs/source/api/'
